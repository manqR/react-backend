{"version":3,"sources":["Auth/actions.js","views/promo/_form.js"],"names":["BASE_URL","_form","props","handleChangeBranchCode","event","setState","branchCode","target","value","handlePromoCode","promo_code","handlePromoDescription","promo_description","handleEffStart","eff_start","handleeffEnd","eff_end","handleAmount","amount","handlePercent","percent","handleQuota","quota","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","state","errorMsg","isSave","data","submitHandler","bind","e","preventDefault","axios","method","proxyHeaders","credentials","headers","getToken","this","then","response","reset","componentDidMount","catch","error","mounted","URL","fetch","Headers","json","results","dropdownBranch","map","i","BRANCH_CODE","BRANCH_NAME","xs","md","action","encType","className","row","htmlFor","custom","name","id","onChange","placeholder","type","size","color","onClick","Component"],"mappings":"6KACI,kCAGO,IAAMA,EAAU,kC,6JCsBrBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA6BVC,uBAAyB,SAAAC,GACrB,EAAKC,SAAS,CACVC,WAAYF,EAAMG,OAAOC,SAhCd,EAmClBC,gBAAkB,SAAAL,GACf,EAAKC,SAAS,CACVK,WAAYN,EAAMG,OAAOC,SArCd,EAyCjBG,uBAAyB,SAAAP,GACvB,EAAKC,SAAS,CACVO,kBAAmBR,EAAMG,OAAOC,SA3CrB,EA+CjBK,eAAiB,SAAAT,GACf,EAAKC,SAAS,CACVS,UAAWV,EAAMG,OAAOC,SAjDb,EAoDjBO,aAAe,SAAAX,GACb,EAAKC,SAAS,CACVW,QAASZ,EAAMG,OAAOC,SAtDX,EAyDjBS,aAAe,SAAAb,GACb,EAAKC,SAAS,CACVa,OAAQd,EAAMG,OAAOC,SA3DV,EA8DjBW,cAAgB,SAAAf,GACd,EAAKC,SAAS,CACVe,QAAShB,EAAMG,OAAOC,SAhEX,EAmEjBa,YAAc,SAAAjB,GACZ,EAAKC,SAAS,CACViB,MAAOlB,EAAMG,OAAOC,SArET,EAyEjBe,UAAY,SAAAC,GACV,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,IACrBD,EAAIG,KAAKC,mBAAmBH,GAAK,IAAMG,mBAAmBL,EAAIE,KAElE,OAAOD,EAAIK,KAAK,MA1EhB,EAAKC,MAAQ,CACTzB,WAAW,GACXI,WAAY,GACZE,kBAAmB,GACnBE,UAAW,KACXE,QAAS,KACTE,OAAQ,EACRE,QAAS,EACTE,MAAO,EACPU,UAAU,EACVC,QAAS,EACTC,KAAM,IAGV,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKjC,uBAAyB,EAAKA,uBAAuBiC,KAA5B,gBAC9B,EAAK3B,gBAAkB,EAAKA,gBAAgB2B,KAArB,gBACvB,EAAKzB,uBAAyB,EAAKA,uBAAuByB,KAA5B,gBAC9B,EAAKvB,eAAiB,EAAKA,eAAeuB,KAApB,gBACtB,EAAKrB,aAAe,EAAKA,aAAaqB,KAAlB,gBACpB,EAAKnB,aAAe,EAAKA,aAAamB,KAAlB,gBACpB,EAAKjB,cAAgB,EAAKA,cAAciB,KAAnB,gBACrB,EAAKf,YAAc,EAAKA,YAAYe,KAAjB,gBA3BJ,E,iDAoFjB,SAAcC,GAAI,IAAD,OAEfA,EAAEC,iBACFC,IAAM,GAAD,OAAIvC,IAAJ,iBAA6B,CAC9BwC,OAAQ,OACRC,cAAc,EACdC,aAAa,EACbC,QAAS,CACC,iBAAiBC,cACjB,eAAgB,oCAChB,OAAU,oBAEpBV,KAAMW,KAAKtB,UAAU,CACjBjB,WAAWuC,KAAKd,MAAMzB,WACtBI,WAAYmC,KAAKd,MAAMrB,WACvBE,kBAAmBiC,KAAKd,MAAMnB,kBAC9BE,UAAW+B,KAAKd,MAAMjB,UACtBE,QAAS6B,KAAKd,MAAMf,QACpBE,OAAQ2B,KAAKd,MAAMb,OACnBE,QAASyB,KAAKd,MAAMX,QACpBE,MAAOuB,KAAKd,MAAMT,UAEvBwB,MAAK,SAAAC,GAEJ,EAAK1C,SAAS,CAAC4B,QAAO,IACtB,EAAKe,QACL,EAAKC,uBAENC,OAAM,SAAAC,GACL,EAAK9C,SAAS,CACV2B,UAAS,S,mBAOzB,WACIa,KAAKxC,SAAS,CACVC,WAAW,GACXI,WAAY,GACZE,kBAAmB,GACnBE,UAAW,GACXE,QAAS,GACTE,OAAQ,EACRE,QAAS,EACTE,MAAO,M,+BAKf,WAAqB,IAAD,OAChBuB,KAAKO,SAAU,EACf,IAAMC,EAAG,UAAMrD,IAAN,gBACTsD,MAAMD,EAAK,CACPb,OAAQ,OACRG,QAAS,IAAIY,QAAQ,CACnB,iBAAiBX,cACjB,eAAgB,oCAChB,OAAU,uBAGfE,MAAK,SAAAC,GAAQ,OAAIA,EAASS,UAC1BV,MAAK,SAAAU,GACF,EAAKnD,SAAS,CAAE6B,KAAMsB,EAAKC,e,kCAInC,WACIZ,KAAKO,SAAU,I,oBAMnB,WAEI,IAAIM,EAAiBb,KAAKd,MAAMG,KAAKyB,KAAI,SAACzB,EAAM0B,GAC5C,OAAQ,wBAAgBpD,MAAO0B,EAAK2B,YAA5B,SAA0C3B,EAAK4B,aAAlCF,MAG3B,OACE,mCACA,cAAC,KAAD,UACI,cAAC,IAAD,CAAMG,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,wBAGA,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,OAAO,GAAGzB,OAAO,OAAO0B,QAAQ,sBAAsBC,UAAU,kBAAvE,UACA,eAAC,IAAD,CAAYC,KAAG,EAAf,UACI,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,SAAhB,2BAEF,cAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,KAAD,CAASM,QAAM,EAACC,KAAK,SACZC,GAAG,SACHC,SAAU5B,KAAK1C,uBAFxB,UAGI,wBAAQK,MAAM,GAAd,wBACA,wBAAQA,MAAM,IAAd,qBACDkD,UAIT,eAAC,IAAD,CAAYU,KAAG,EAAf,UACI,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,0BAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaD,KAAK,aAAaG,YAAY,aAAalE,MAAOqC,KAAKd,MAAMrB,WACzE+D,SAAU5B,KAAKpC,kBAC3B,cAAC,IAAD,iDAIJ,eAAC,IAAD,CAAY2D,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,sBAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaD,KAAK,aAAaG,YAAY,SAASlE,MAAOqC,KAAKd,MAAMb,OACrEuD,SAAU5B,KAAK5B,eAC3B,cAAC,IAAD,6CAGJ,eAAC,IAAD,CAAYmD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,2BAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaD,KAAK,aAAaG,YAAY,oBAAoBlE,MAAOqC,KAAKd,MAAMnB,kBAChF6D,SAAU5B,KAAKlC,yBAC3B,cAAC,IAAD,wDAIJ,eAAC,IAAD,CAAYyD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,uBAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaD,KAAK,aAAaG,YAAY,aAAalE,MAAOqC,KAAKd,MAAMX,QACzEqD,SAAU5B,KAAK1B,gBAC3B,cAAC,IAAD,iEAGJ,eAAC,IAAD,CAAYiD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,2BAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaG,KAAK,OAAOJ,KAAK,aAAaG,YAAY,cAAclE,MAAOqC,KAAKd,MAAMjB,UACtF2D,SAAU5B,KAAKhC,iBAC3B,cAAC,IAAD,2DAGJ,eAAC,IAAD,CAAYuD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,yBAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAaG,KAAK,OAAOJ,KAAK,aAAaG,YAAY,YAAYlE,MAAOqC,KAAKd,MAAMf,QACpFyD,SAAU5B,KAAK9B,eAC3B,cAAC,IAAD,qDAGJ,eAAC,IAAD,CAAYqD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAAC,KAAD,CAAQK,QAAQ,aAAhB,qBAEF,eAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAjB,UACE,cAAC,IAAD,CAAQQ,GAAG,aAAcD,KAAK,aAAaG,YAAY,cAAclE,MAAOqC,KAAKd,MAAMT,MAC3EmD,SAAU5B,KAAKxB,cAC3B,cAAC,IAAD,uDAKR,cAAC,IAAD,UACE,eAAC,IAAD,CAASsD,KAAK,SAASC,KAAK,KAAKC,MAAM,UAAWC,QAASjC,KAAKV,cAAhE,UAA+E,cAAC,IAAD,CAAOoC,KAAK,iBAA3F,4B,GAzQMQ,aAoRL9E","file":"static/js/53.f350ae55.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../Auth/common'\r\nimport {BASE_URL} from '../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        \r\n    \r\n        this.state = {\r\n            branchCode:\"\",\r\n            promo_code: \"\",\r\n            promo_description: \"\",\r\n            eff_start: null,\r\n            eff_end: null,\r\n            amount: 0,\r\n            percent: 0,\r\n            quota: 0,\r\n            errorMsg: false,\r\n            isSave : false,\r\n            data: [],\r\n        };\r\n    \r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.handleChangeBranchCode = this.handleChangeBranchCode.bind(this);\r\n        this.handlePromoCode = this.handlePromoCode.bind(this);\r\n        this.handlePromoDescription = this.handlePromoDescription.bind(this);\r\n        this.handleEffStart = this.handleEffStart.bind(this);    \r\n        this.handleeffEnd = this.handleeffEnd.bind(this);    \r\n        this.handleAmount = this.handleAmount.bind(this);    \r\n        this.handlePercent = this.handlePercent.bind(this);    \r\n        this.handleQuota = this.handleQuota.bind(this);    \r\n    \r\n    }\r\n    handleChangeBranchCode = event => {\r\n        this.setState({\r\n            branchCode: event.target.value\r\n        });\r\n      }\r\n     handlePromoCode = event => {\r\n        this.setState({\r\n            promo_code: event.target.value\r\n        });\r\n      }\r\n    \r\n      handlePromoDescription = event => {\r\n        this.setState({\r\n            promo_description: event.target.value\r\n        });\r\n      }\r\n    \r\n      handleEffStart = event => {\r\n        this.setState({\r\n            eff_start: event.target.value\r\n        });\r\n      }\r\n      handleeffEnd = event => {\r\n        this.setState({\r\n            eff_end: event.target.value\r\n        });\r\n      }\r\n      handleAmount = event => {\r\n        this.setState({\r\n            amount: event.target.value\r\n        });\r\n      }\r\n      handlePercent = event => {\r\n        this.setState({\r\n            percent: event.target.value\r\n        });\r\n      }\r\n      handleQuota = event => {\r\n        this.setState({\r\n            quota: event.target.value\r\n        });\r\n      }\r\n    \r\n      serialize = obj => {\r\n        let str = [];\r\n        for (let p in obj)\r\n          if (obj.hasOwnProperty(p)) {\r\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n          }\r\n        return str.join(\"&\");\r\n      };\r\n\r\n\r\n\r\n      submitHandler(e) { \r\n        // let token = this.getToken()            \r\n        e.preventDefault();      \r\n        axios(`${BASE_URL}/promo/create`, {\r\n            method: \"POST\",\r\n            proxyHeaders: false,\r\n            credentials: true,        \r\n            headers: {              \r\n                      \"x-access-token\":getToken(),\r\n                      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                      \"Accept\": \"application/json\"                  \r\n            },\r\n            data: this.serialize({    \r\n                branchCode:this.state.branchCode,\r\n                promo_code: this.state.promo_code,\r\n                promo_description: this.state.promo_description,\r\n                eff_start: this.state.eff_start,\r\n                eff_end: this.state.eff_end,\r\n                amount: this.state.amount,\r\n                percent: this.state.percent,\r\n                quota: this.state.quota                 \r\n            })\r\n        }).then(response => {\r\n            // console.log(response)\r\n            this.setState({isSave:true})\r\n            this.reset()\r\n            this.componentDidMount()\r\n                     \r\n        }).catch(error => {                         \r\n            this.setState({\r\n                errorMsg:true\r\n            })\r\n        });\r\n                      \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({     \r\n        branchCode:\"\",     \r\n        promo_code: \"\",\r\n        promo_description: \"\",\r\n        eff_start: \"\",\r\n        eff_end: \"\",\r\n        amount: 0,\r\n        percent: 0,\r\n        quota: 0,\r\n    });\r\n}\r\n\r\n\r\ncomponentDidMount() {           \r\n    this.mounted = true;     \r\n    const URL = `${BASE_URL}/branch/list`; \r\n    fetch(URL, { \r\n        method: 'post', \r\n        headers: new Headers({\r\n          \"x-access-token\":getToken(),\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Accept\": \"application/json\"    \r\n        })       \r\n    })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        this.setState({ data: json.results });             \r\n    });          \r\n    \r\n}\r\ncomponentWillUnmount() {\r\n    this.mounted = false;\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n  \r\n    let dropdownBranch = this.state.data.map((data, i) =>{\r\n        return  <option key={i} value={data.BRANCH_CODE}>{data.BRANCH_NAME}</option>;\r\n    })\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Add Promo\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n              <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Branch Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeBranchCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                        <option value=\"0\">- All -</option>\r\n                      {dropdownBranch}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Promo Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Promo Code\" value={this.state.promo_code}                        \r\n                                onChange={this.handlePromoCode}  />\r\n                    <CFormText>Fill your Promo Code in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n               \r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Amount</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Amount\" value={this.state.amount}                        \r\n                                onChange={this.handleAmount}  />\r\n                    <CFormText>Fill your Amount in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Description</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Promo Description\" value={this.state.promo_description}                        \r\n                                onChange={this.handlePromoDescription}  />\r\n                    <CFormText>Fill your Promo Description in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n               \r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Percent</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Percent(%)\" value={this.state.percent}                        \r\n                                onChange={this.handlePercent}  />\r\n                    <CFormText>Fill your Percent of Promo(Optional) in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Start Promo</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" type=\"date\" name=\"text-input\" placeholder=\"Start Promo\" value={this.state.eff_start}                        \r\n                                onChange={this.handleEffStart}  />\r\n                    <CFormText>Fill your Start Eff Date Promo in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">End Promo</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" type=\"date\" name=\"text-input\" placeholder=\"End Promo\" value={this.state.eff_end}                        \r\n                                onChange={this.handleeffEnd}  />\r\n                    <CFormText>Fill your End Date Promo in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Quota</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\"  name=\"text-input\" placeholder=\"Quota Promo\" value={this.state.quota}                        \r\n                                onChange={this.handleQuota}  />\r\n                    <CFormText>Fill your Quota Promo in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>               \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}