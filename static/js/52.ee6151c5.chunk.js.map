{"version":3,"sources":["Auth/actions.js","views/master/srcdocno/_form.js"],"names":["BASE_URL","_form","props","handleChangeBranchCode","event","setState","branchCode","target","value","handleChangeSourceCode","sourceCode","handleChangeDocName","docName","handleChangeSrcDocText","srcDocText","handleChangeDocFormat","docFormat","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getDate","today","Date","date","getFullYear","toString","substr","getMonth","state","errorMsg","isSave","data","submitHandler","bind","e","preventDefault","axios","method","proxyHeaders","credentials","headers","getToken","this","then","response","reset","catch","error","mounted","URL","fetch","Headers","json","results","dropdownBranch","map","i","BRANCH_CODE","BRANCH_NAME","xs","md","action","encType","className","row","htmlFor","custom","name","id","onChange","placeholder","type","size","color","onClick","Component"],"mappings":"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","file":"static/js/52.ee6151c5.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import React, { Component} from 'react';\r\n\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {          \r\n        branchCode : \"\",\r\n        sourceCode: \"\",\r\n        docName: \"\",        \r\n        srcDocText: \"\",\r\n        docFormat: \"\",\r\n        errorMsg: null,\r\n        isSave : false,\r\n        data:[]\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleChangeBranchCode = this.handleChangeBranchCode.bind(this);\r\n    this.handleChangeSourceCode = this.handleChangeSourceCode.bind(this);        \r\n    this.handleChangeDocName = this.handleChangeDocName.bind(this);        \r\n    this.handleChangeSrcDocText = this.handleChangeSrcDocText.bind(this);           \r\n    this.handleChangeDocFormat = this.handleChangeDocFormat.bind(this);           \r\n\r\n  }\r\n\r\n  handleChangeBranchCode = event => {\r\n    this.setState({\r\n        branchCode: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeSourceCode = event => {\r\n    this.setState({\r\n        sourceCode: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeDocName = event => {\r\n    this.setState({\r\n        docName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeSrcDocText = event => {\r\n    this.setState({\r\n        srcDocText: event.target.value\r\n    });\r\n  }\r\n  handleChangeDocFormat = event => {\r\n    this.setState({\r\n        docFormat: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  serialize = obj => {\r\n    let str = [];\r\n    for (let p in obj)\r\n      if (obj.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n      }\r\n    return str.join(\"&\");\r\n  };\r\n\r\n\r\n  getDate = () => {\r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear().toString().substr(-2)+''+(today.getMonth() + 1);\r\n \r\n    this.setState({ date });\r\n  };\r\n\r\n  submitHandler(e) { \r\n    // let token = this.getToken()            \r\n    e.preventDefault();      \r\n   \r\n\r\n    axios(`${BASE_URL}/srcdoc/create`, {\r\n        method: \"POST\",\r\n        proxyHeaders: false,\r\n        credentials: true,        \r\n        headers: {              \r\n                  \"x-access-token\":getToken(),\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                  \"Accept\": \"application/json\"                  \r\n        },\r\n        data: this.serialize({      \r\n            branchCode: this.state.branchCode,           \r\n            sourceCode: this.state.sourceCode,\r\n            docName: this.state.docName,\r\n            srcDocText: this.state.srcDocText,                                        \r\n            docFormat: this.state.docFormat,                         \r\n        })\r\n    }).then(response => {\r\n        // console.log(response)\r\n        this.setState({isSave:true})\r\n        this.reset()\r\n                 \r\n    }).catch(error => {                         \r\n        this.setState({\r\n            errorMsg:true\r\n        })\r\n    });\r\n                \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({          \r\n        branchCode : \"\",\r\n        sourceCode: \"\",\r\n        docName: \"\",        \r\n        srcDocText: \"\",\r\n        docFormat: \"\",\r\n        data:[]\r\n    });\r\n}\r\n\r\n\r\ncomponentDidMount() {           \r\n  this.mounted = true; \r\n  this.getDate();\r\n  const URL = `${BASE_URL}/branch/list`; \r\n  fetch(URL, { \r\n      method: 'post', \r\n      headers: new Headers({\r\n        \"x-access-token\":getToken(),\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json\"    \r\n      })       \r\n  })\r\n  .then(response => response.json())\r\n  .then(json => {\r\n      this.setState({ data: json.results });             \r\n  });       \r\n  \r\n  \r\n}\r\ncomponentWillUnmount() {\r\n  this.mounted = false;\r\n}\r\n\r\n\r\n\r\nrender() {\r\n  \r\n  let dropdownBranch = this.state.data.map((data, i) =>{\r\n    return  <option key={i} value={data.BRANCH_CODE}>{data.BRANCH_NAME}</option>;\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n       \r\n          <CCard>\r\n            <CCardHeader>\r\n               Add Src Doc\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n              \r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Branch Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeBranchCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                        <option value=\"0\">- All -</option>\r\n                      {dropdownBranch}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                                   \r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Source Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Source Doc\" value={this.state.sourceCode}                        \r\n                                onChange={this.handleChangeSourceCode}  />                    \r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Doc Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Doc Name\" value={this.state.docName}                        \r\n                                onChange={this.handleChangeDocName}  />                    \r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Doc Text</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Doc Text\" value={this.state.srcDocText}                        \r\n                                onChange={this.handleChangeSrcDocText}  />                    \r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Doc Format</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Doc Format\" value={this.state.docFormat}                        \r\n                                onChange={this.handleChangeDocFormat}  />                    \r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n         \r\n            \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}