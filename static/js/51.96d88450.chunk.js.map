{"version":3,"sources":["Auth/actions.js","views/master/price/_form.js"],"names":["BASE_URL","_form","props","handleChangeRecordStatus","event","setState","recordStatus","target","value","handleChangeItemCode","itemCode","handleChangeItemPrice","itemPrice","handleChangeEffPriceDate","effPriceDate","handleChangeBranchCode","branchCode","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getDate","today","Date","date","getFullYear","toString","substr","getMonth","state","errorMsg","isSave","data","items","submitHandler","bind","e","preventDefault","axios","method","proxyHeaders","credentials","headers","getToken","this","then","response","reset","catch","error","mounted","URL","fetch","Headers","json","results","URLs","dropdownBranch","map","i","BRANCH_CODE","BRANCH_NAME","dropdownItems","ITEM_CODE","ITEM_NAME","xs","md","action","encType","className","row","htmlFor","custom","name","id","onChange","placeholder","type","size","color","onClick","Component"],"mappings":"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","file":"static/js/51.96d88450.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import React, { Component} from 'react';\r\n\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {               \r\n        recordStatus: \"A\",\r\n        branchCode : \"\",\r\n        itemCode: \"\",\r\n        itemPrice: \"\",        \r\n        effPriceDate: null,\r\n        errorMsg: false,\r\n        isSave : false,\r\n        data:[],\r\n        items:[]\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleChangeRecordStatus = this.handleChangeRecordStatus.bind(this);\r\n    this.handleChangeItemCode = this.handleChangeItemCode.bind(this);        \r\n    this.handleChangeItemPrice = this.handleChangeItemPrice.bind(this);        \r\n    this.handleChangeEffPriceDate = this.handleChangeEffPriceDate.bind(this);           \r\n    this.handleChangeBranchCode = this.handleChangeBranchCode.bind(this);           \r\n\r\n  }\r\n\r\n  handleChangeRecordStatus = event => {\r\n    this.setState({\r\n        recordStatus: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemCode = event => {\r\n    this.setState({\r\n        itemCode: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemPrice = event => {\r\n    this.setState({\r\n        itemPrice: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeEffPriceDate = event => {\r\n    this.setState({\r\n        effPriceDate: event.target.value\r\n    });\r\n  }\r\n  handleChangeBranchCode = event => {\r\n    this.setState({\r\n        branchCode: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  serialize = obj => {\r\n    let str = [];\r\n    for (let p in obj)\r\n      if (obj.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n      }\r\n    return str.join(\"&\");\r\n  };\r\n\r\n\r\n  getDate = () => {\r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear().toString().substr(-2)+''+(today.getMonth() + 1);\r\n \r\n    this.setState({ date });\r\n  };\r\n\r\n  submitHandler(e) { \r\n    // let token = this.getToken()            \r\n    e.preventDefault();      \r\n   \r\n\r\n    axios(`${BASE_URL}/price/create`, {\r\n        method: \"POST\",\r\n        proxyHeaders: false,\r\n        credentials: true,        \r\n        headers: {              \r\n                  \"x-access-token\":getToken(),\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                  \"Accept\": \"application/json\"                  \r\n        },\r\n        data: this.serialize({                 \r\n            recordStatus: this.state.recordStatus,           \r\n            itemPrice: this.state.itemPrice,\r\n            branchCode: this.state.branchCode,\r\n            itemCode: this.state.itemCode,                                        \r\n            effPriceDate: this.state.effPriceDate,                         \r\n        })\r\n    }).then(response => {\r\n        // console.log(response)\r\n        this.setState({isSave:true})\r\n        this.reset()\r\n                 \r\n    }).catch(error => {                         \r\n        this.setState({\r\n            errorMsg:true\r\n        })\r\n    });\r\n                \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({          \r\n        recordStatus: \"A\",        \r\n        itemCode: \"\",      \r\n        branchCode: \"\",      \r\n        itemPrice: \"\",\r\n        effPriceDate: null,\r\n        data:[]\r\n    });\r\n}\r\n\r\n\r\ncomponentDidMount() {           \r\n  this.mounted = true; \r\n  this.getDate();\r\n  const URL = `${BASE_URL}/branch/list`; \r\n  fetch(URL, { \r\n      method: 'post', \r\n      headers: new Headers({\r\n        \"x-access-token\":getToken(),\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json\"    \r\n      })       \r\n  })\r\n  .then(response => response.json())\r\n  .then(json => {\r\n      this.setState({ data: json.results });             \r\n  });       \r\n  \r\n  const URLs = `${BASE_URL}/item/list`; \r\n  fetch(URLs, { \r\n      method: 'post', \r\n      headers: new Headers({\r\n        \"x-access-token\":getToken(),\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json\"    \r\n      })       \r\n  })\r\n  .then(response => response.json())\r\n  .then(json => {\r\n      this.setState({ items: json.results });             \r\n  });       \r\n\r\n  \r\n}\r\ncomponentWillUnmount() {\r\n  this.mounted = false;\r\n}\r\n\r\n\r\n\r\nrender() {\r\n  \r\n  let dropdownBranch = this.state.data.map((data, i) =>{\r\n    return  <option key={i} value={data.BRANCH_CODE}>{data.BRANCH_NAME}</option>;\r\n  })\r\n\r\n\r\n  let dropdownItems = this.state.items.map((data, i) =>{\r\n    return  <option key={i} value={data.ITEM_CODE}>{data.ITEM_NAME}</option>;\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n       \r\n          <CCard>\r\n            <CCardHeader>\r\n               Add Price Item\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n              <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Record Status</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeRecordStatus}>\r\n                      <option value=\"\">- Choose -</option>\r\n                      <option value=\"A\">Enable</option>\r\n                      <option value=\"N\">Disable</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Branch Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeBranchCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                        <option value=\"0\">- All -</option>\r\n                      {dropdownBranch}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Item</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeItemCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                        <option value=\"0\">- All -</option>\r\n                      {dropdownItems}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>                                               \r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Item Price</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Item Price\" value={this.state.itemPrice}                        \r\n                                onChange={this.handleChangeItemPrice}  />\r\n                    <CFormText>Item Price</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Start Effective Price</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" type=\"date\" placeholder=\"Effective Price Date\" value={this.state.effPriceDate}                        \r\n                                onChange={this.handleChangeEffPriceDate}  />\r\n                    <CFormText>Fill your Effective Date for Item Price in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>               \r\n            \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}