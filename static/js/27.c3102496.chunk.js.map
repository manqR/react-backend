{"version":3,"sources":["Auth/actions.js","views/master/company/index.js"],"names":["BASE_URL","$","require","Datatable","Index","props","state","company","loading","a","this","mounted","URL","axios","method","headers","getToken","res","setState","data","results","getUsersData","then","syncTable","$el","el","DataTable","columns","title","console","log","xs","md","to","type","size","color","content","cilPlus","className","width","ref","Component"],"mappings":"gLACI,kCAGO,IAAMA,EAAU,kC,+PCcrBC,EAAIC,EAAQ,KAClBD,EAAEE,UAAYD,EAAQ,K,IAGDE,E,kDAChB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,GACTC,SAAS,GAJE,E,uFAShB,8BAAAC,EAAA,6DACIC,KAAKC,SAAU,EACTC,EAFV,UAEmBZ,IAFnB,0BAIsBa,IAAMD,EAAK,CACjBE,OAAQ,OACRC,QAAS,CACD,iBAAiBC,cACjB,eAAgB,oCAChB,OAAU,sBATlC,OAIUC,EAJV,OAYIP,KAAKQ,SAAS,CAAEV,SAAS,EAAOD,QAASU,EAAIE,KAAKC,UAZtD,gD,qFAmBJ,WAAqB,IAAD,OAChBV,KAAKW,eAAeC,MAAK,kBAAM,EAAKC,iB,uBAIxC,WACIb,KAAKc,IAAMvB,EAAES,KAAKe,IAClBf,KAAKc,IAAIE,UAAU,CACnBP,KAAMT,KAAKJ,MAAMC,QAEjBoB,QAAS,CACD,CAAEC,MAAO,gBAAiBT,KAAM,iBAChC,CAAES,MAAO,eAAgBT,KAAM,gBAC/B,CAAES,MAAO,sBAAuBT,KAAM,0BAI9CU,QAAQC,IAAI,UAAUpB,KAAKJ,MAAMC,W,gCAIrC,c,kCAEA,WACIG,KAAKC,SAAU,I,oBAGlB,WAAU,IAAD,OACL,OACG,cAAC,KAAD,UACI,cAAC,IAAD,CAAMoB,GAAG,KAAKC,GAAG,KAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,KAAD,CAAOC,GAAG,kBAAV,SACI,eAAC,IAAD,CAASC,KAAK,SAAUC,KAAK,KAAKC,MAAM,UAAxC,UACA,cAAC,IAAD,CAAOC,QAASC,MADhB,sBAKR,cAAC,IAAD,UACI,uBAAOC,UAAU,wBAAwBC,MAAM,OAC3CC,IAAK,SAAChB,GAAD,OAAS,EAAKA,GAAKA,kB,GAtErBiB","file":"static/js/27.c3102496.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import \"../../../css/dataTables.bootstrap4.css\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CIcon from '@coreui/icons-react'\r\nimport { cilPlus } from '@coreui/icons';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow,\r\n    CLink,\r\n  } from '@coreui/react'\r\n\r\nconst $ = require(\"jquery\");\r\n$.Datatable = require(\"datatables.net\");\r\n\r\n\r\nexport default class Index extends Component {\r\n     constructor(props) {\r\n         super(props);\r\n         this.state = {\r\n             company: [],\r\n             loading: true,\r\n         };\r\n     }\r\n\r\n     // Keep as you have done\r\n        async getUsersData() {\r\n            this.mounted = true; \r\n            const URL = `${BASE_URL}/company/list`; \r\n         \r\n            const res = await axios(URL, {\r\n                        method: \"POST\",     \r\n                        headers: {              \r\n                                \"x-access-token\":getToken(),\r\n                                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                                \"Accept\": \"application/json\"                  \r\n                        },\r\n                    })\r\n            this.setState({ loading: false, company: res.data.results });\r\n                        \r\n        }\r\n  \r\n  \r\n        \r\n    // Init table data as component is mounted\r\n    componentDidMount() {\r\n        this.getUsersData().then(() => this.syncTable());        \r\n    }\r\n\r\n    // Split as new function to init the datatable\r\n    syncTable() {\r\n        this.$el = $(this.el);\r\n        this.$el.DataTable({\r\n        data: this.state.company, //option 1\r\n        \r\n        columns: [\r\n                { title: \"RECORD STATUS\", data: \"RECORD_STATUS\" },\r\n                { title: \"COMPANY CODE\", data: \"COMPANY_CODE\" },\r\n                { title: \"COMPANY DESCRIPTION\", data: \"COMPANY_DESCRIPTION\" }\r\n            ]\r\n        });\r\n       \r\n        console.log('company',this.state.company)\r\n        \r\n    }\r\n\r\n    componentWillMount() {}\r\n     \r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n     render() {\r\n         return (\r\n            <CRow>\r\n                <CCol xs=\"12\" md=\"12\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <CLink to=\"/company-create\">\r\n                                <CButton type=\"button\"  size=\"sm\" color=\"success\">\r\n                                <CIcon content={cilPlus} /> Add Company\r\n                                </CButton>\r\n                            </CLink>                            \r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <table className=\"table table-bordered \" width=\"100%\"\r\n                                ref={(el) => (this.el = el)}>\r\n                            </table>\r\n                        </CCardBody>\r\n                    </CCard>         \r\n                </CCol>        \r\n            </CRow>\r\n         );\r\n     }\r\n}"],"sourceRoot":""}