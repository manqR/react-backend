{"version":3,"sources":["Auth/actions.js","views/master/period/_form.js"],"names":["BASE_URL","_form","props","handleChangeMonthName","event","setState","monthName","target","value","handleChangeYear","year","handleChangeSwitchPeriod","switchPeriodDate","handleChangeStartPeriod","startPeriod","handleChangeEndPeriod","endPeriod","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getDate","today","Date","date","getFullYear","toString","substr","getMonth","state","errorMsg","isSave","submitHandler","bind","e","preventDefault","axios","method","proxyHeaders","credentials","headers","getToken","data","this","then","response","reset","catch","error","indents","i","xs","md","action","encType","className","row","htmlFor","custom","name","id","onChange","type","placeholder","size","color","onClick","Component"],"mappings":"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","file":"static/js/50.3467aa54.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        monthName: \"\",\r\n        year: \"\",\r\n        switchPeriodDate: \"\",\r\n        startPeriod: \"\",\r\n        endPeriod: \"\",\r\n        errorMsg: false,\r\n        isSave : false\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleChangeMonthName = this.handleChangeMonthName.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n    this.handleChangeSwitchPeriod = this.handleChangeSwitchPeriod.bind(this);    \r\n    this.handleChangeStartPeriod = this.handleChangeStartPeriod.bind(this);    \r\n    this.handleChangeEndPeriod = this.handleChangeEndPeriod.bind(this);    \r\n\r\n  }\r\n\r\n  handleChangeMonthName = event => {\r\n    this.setState({\r\n      monthName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeYear = event => {\r\n    this.setState({\r\n      year: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeSwitchPeriod = event => {\r\n    this.setState({\r\n      switchPeriodDate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeStartPeriod = event => {\r\n    this.setState({\r\n      startPeriod: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeEndPeriod = event => {\r\n    this.setState({\r\n      endPeriod: event.target.value\r\n    });\r\n  }\r\n\r\n  serialize = obj => {\r\n    let str = [];\r\n    for (let p in obj)\r\n      if (obj.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n      }\r\n    return str.join(\"&\");\r\n  };\r\n\r\n\r\n  getDate = () => {\r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear().toString().substr(-2)+''+(today.getMonth() + 1);\r\n \r\n    this.setState({ date });\r\n  };\r\n\r\n  submitHandler(e) { \r\n    // let token = this.getToken()            \r\n    e.preventDefault();      \r\n   \r\n\r\n    axios(`${BASE_URL}/periode/create`, {\r\n        method: \"POST\",\r\n        proxyHeaders: false,\r\n        credentials: true,        \r\n        headers: {              \r\n                  \"x-access-token\":getToken(),\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                  \"Accept\": \"application/json\"                  \r\n        },\r\n        data: this.serialize({            \r\n            monthName: this.state.monthName,\r\n            year: this.state.year,\r\n            switchPeriodDate:this.state.switchPeriodDate,\r\n            startPeriod: this.state.startPeriod,\r\n            endPeriod: this.state.endPeriod,                 \r\n        })\r\n    }).then(response => {\r\n        // console.log(response)\r\n        this.setState({isSave:true})\r\n        this.reset()\r\n                 \r\n    }).catch(error => {                         \r\n        this.setState({\r\n            errorMsg:true\r\n        })\r\n    });\r\n                \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({          \r\n        monthName: \"\",\r\n        year: \"\",\r\n        switchPeriodDate: \"\",\r\n        startPeriod: \"\",\r\n        endPeriod: \"\",\r\n    });\r\n}\r\n\r\n\r\n\r\nrender() {\r\n  \r\n  \r\n  let indents = [];\r\n  for (var i = 1; i <= 31; i++) {\r\n    indents.push(<option key={i} value={i}>{i}</option>);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Add Period\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Month Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeMonthName}>\r\n                      <option value=\"\">- Choose -</option>\r\n                      <option value=\"January\">January</option>\r\n                      <option value=\"February\">February</option>\r\n                      <option value=\"March\">March</option>\r\n                      <option value=\"April\">April</option>\r\n                      <option value=\"May\">May</option>\r\n                      <option value=\"June\">June</option>\r\n                      <option value=\"July\">July</option>\r\n                      <option value=\"August\">August</option>\r\n                      <option value=\"September\">September</option>\r\n                      <option value=\"October\">October</option>\r\n                      <option value=\"November\">November</option>\r\n                      <option value=\"December\">December</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Year</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeYear}>\r\n                      <option value=\"\">- Choose -</option>\r\n                      <option value=\"2022\">2022</option>\r\n                      <option value=\"2023\">2023</option>\r\n                      <option value=\"2024\">2024</option>\r\n                      <option value=\"2025\">2025</option>\r\n                    \r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Switch Period Date</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeSwitchPeriod}>\r\n                      <option value=\"\">- Choose -</option>  \r\n                             {indents}\r\n                    \r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n        \r\n               \r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Start Period</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                 \r\n                    <CInput id=\"text-input\" name=\"text-input\" type=\"date\" placeholder=\"Start Period\" value={this.state.startPeriod}                        \r\n                                onChange={this.handleChangeStartPeriod}  />\r\n                    <CFormText>Fill your start period in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">End Period</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" type=\"date\" placeholder=\"End Period\" value={this.state.endPeriod}                        \r\n                                onChange={this.handleChangeEndPeriod}  />\r\n                    <CFormText>Fill your end period in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n            \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}