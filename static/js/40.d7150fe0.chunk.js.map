{"version":3,"sources":["Auth/actions.js","../node_modules/@coreui/icons/js/free/cil-plus.js","views/master/item/_form.js"],"names":["BASE_URL","cilPlus","_form","props","handleChangeRecordStatus","event","setState","recordStatus","target","value","handleChangeBranchCode","branchCode","handleChangeItemCode","itemCode","handleChangeItemName","itemName","handleChangeItemPhoto","itemPhoto","handleChangeItemGroup","itemGroup","handleChangePriceListItem","priceListItem","handleChangeEffPriceDate","effPriceDate","handleChangeLastPrice","lastPrice","handleChangePurchasePrice","purchasePrice","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getDate","today","Date","date","getFullYear","toString","substr","getMonth","state","companyCode","creationUserId","creationDatetime","errorMsg","isSave","data","submitHandler","bind","e","preventDefault","axios","method","proxyHeaders","credentials","headers","getToken","this","then","response","reset","catch","error","mounted","URL","fetch","Headers","json","results","dropdownBranch","map","i","BRANCH_CODE","BRANCH_NAME","xs","md","to","type","size","color","content","action","encType","className","row","htmlFor","custom","name","id","onChange","placeholder","onClick","Component"],"mappings":"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","file":"static/js/40.d7150fe0.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]","import React, { Component} from 'react';\r\n\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n  CLink,\r\n} from '@coreui/react'\r\nimport { cilPlus } from '@coreui/icons';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {        \r\n        recordStatus: \"\",\r\n        companyCode: \"\",\r\n        branchCode: \"\",\r\n        itemCode: \"\",\r\n        itemName: \"\",\r\n        itemPhoto: \"\",\r\n        itemGroup: \"\",\r\n        priceListItem: \"\",\r\n        lastPrice: \"\",\r\n        purchasePrice: \"\",\r\n        creationUserId: \"\",\r\n        creationDatetime: null,\r\n        effPriceDate: null,\r\n        errorMsg: false,\r\n        isSave : false,\r\n        data:[]\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleChangeRecordStatus = this.handleChangeRecordStatus.bind(this);\r\n    this.handleChangeBranchCode = this.handleChangeBranchCode.bind(this);\r\n    this.handleChangeItemCode = this.handleChangeItemCode.bind(this);    \r\n    this.handleChangeItemName = this.handleChangeItemName.bind(this);    \r\n    this.handleChangeItemPhoto = this.handleChangeItemPhoto.bind(this);    \r\n    this.handleChangeItemGroup = this.handleChangeItemGroup.bind(this);    \r\n    this.handleChangePriceListItem = this.handleChangePriceListItem.bind(this);    \r\n    this.handleChangeLastPrice = this.handleChangeLastPrice.bind(this);    \r\n    this.handleChangePurchasePrice = this.handleChangePurchasePrice.bind(this);        \r\n    this.handleChangeEffPriceDate = this.handleChangeEffPriceDate.bind(this);        \r\n\r\n  }\r\n\r\n  handleChangeRecordStatus = event => {\r\n    this.setState({\r\n        recordStatus: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeBranchCode = event => {\r\n    this.setState({\r\n        branchCode: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemCode = event => {\r\n    this.setState({\r\n        itemCode: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemName = event => {\r\n    this.setState({\r\n        itemName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemPhoto = event => {\r\n    this.setState({\r\n        itemPhoto: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeItemGroup = event => {\r\n    this.setState({\r\n        itemGroup: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangePriceListItem = event => {\r\n    this.setState({\r\n        priceListItem: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeEffPriceDate = event => {\r\n    this.setState({\r\n        effPriceDate: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeLastPrice = event => {\r\n    this.setState({\r\n        lastPrice: event.target.value\r\n    });\r\n  }\r\n  handleChangePurchasePrice = event => {\r\n    this.setState({\r\n        purchasePrice: event.target.value\r\n    });\r\n  }\r\n\r\n\r\n  serialize = obj => {\r\n    let str = [];\r\n    for (let p in obj)\r\n      if (obj.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n      }\r\n    return str.join(\"&\");\r\n  };\r\n\r\n\r\n  getDate = () => {\r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear().toString().substr(-2)+''+(today.getMonth() + 1);\r\n \r\n    this.setState({ date });\r\n  };\r\n\r\n  submitHandler(e) { \r\n    // let token = this.getToken()            \r\n    e.preventDefault();      \r\n   \r\n\r\n    axios(`${BASE_URL}/item/create`, {\r\n        method: \"POST\",\r\n        proxyHeaders: false,\r\n        credentials: true,        \r\n        headers: {              \r\n                  \"x-access-token\":getToken(),\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                  \"Accept\": \"application/json\"                  \r\n        },\r\n        data: this.serialize({                 \r\n            recordStatus: this.state.recordStatus,\r\n            companyCode: this.state.companyCode,\r\n            branchCode:this.state.branchCode,\r\n            itemCode: this.state.itemCode,\r\n            itemName: this.state.itemName,                 \r\n            itemPhoto: this.state.itemPhoto,                 \r\n            itemGroup: this.state.itemGroup,                 \r\n            priceListItem: this.state.priceListItem,                 \r\n            lastPrice: this.state.lastPrice,                 \r\n            purchasePrice: this.state.purchasePrice                    \r\n        })\r\n    }).then(response => {\r\n        // console.log(response)\r\n        this.setState({isSave:true})\r\n        this.reset()\r\n                 \r\n    }).catch(error => {                         \r\n        this.setState({\r\n            errorMsg:true\r\n        })\r\n    });\r\n                \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({          \r\n        recordStatus: \"\",\r\n        companyCode: \"\",\r\n        branchCode: \"\",\r\n        itemCode: \"\",\r\n        itemName: \"\",\r\n        itemPhoto: \"\",\r\n        itemGroup: \"\",\r\n        priceListItem: \"\",\r\n        lastPrice: \"\",\r\n        purchasePrice: \"\",\r\n        creationUserId: \"\",\r\n        data:[]\r\n    });\r\n}\r\n\r\n\r\ncomponentDidMount() {           \r\n  this.mounted = true; \r\n  this.getDate();\r\n  const URL = `${BASE_URL}/branch/list`; \r\n  fetch(URL, { \r\n      method: 'post', \r\n      headers: new Headers({\r\n        \"x-access-token\":getToken(),\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json\"    \r\n      })       \r\n  })\r\n  .then(response => response.json())\r\n  .then(json => {\r\n      this.setState({ data: json.results });             \r\n  });          \r\n  \r\n}\r\ncomponentWillUnmount() {\r\n  this.mounted = false;\r\n}\r\n\r\n\r\n\r\nrender() {\r\n  \r\n  let dropdownBranch = this.state.data.map((data, i) =>{\r\n    return  <option key={i} value={data.BRANCH_CODE}>{data.BRANCH_NAME}</option>;\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n       \r\n          <CCard>\r\n            <CCardHeader>\r\n              <CLink to=\"/itemCategory-create\">\r\n                <CButton type=\"button\"  size=\"sm\" color=\"success\">\r\n                <CIcon content={cilPlus} /> Add Item Category\r\n                </CButton>\r\n            </CLink>    \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n              <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Record Status</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeRecordStatus}>\r\n                      <option value=\"\">- Choose -</option>\r\n                      <option value=\"A\">Enable</option>\r\n                      <option value=\"N\">Disable</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Branch Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeBranchCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                        <option value=\"0\">- All -</option>\r\n                      {dropdownBranch}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Item Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Item Code\" value={this.state.itemCode}                        \r\n                                onChange={this.handleChangeItemCode}  />\r\n                    <CFormText>Fill your Item Code in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Item Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Item  Name\" value={this.state.itemName}                        \r\n                                onChange={this.handleChangeItemName}  />\r\n                    <CFormText>Fill your Item Name in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n        \r\n               \r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Item Group</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleChangeItemGroup}>\r\n                        <option value=\"\">- Choose -</option>                   \r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Item Price</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Item Price\" value={this.state.priceListItem}                        \r\n                                onChange={this.handleChangePriceListItem}  />\r\n                    <CFormText>Item Price</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Start Effective Price</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" type=\"date\" placeholder=\"Effective Price Date\" value={this.state.effPriceDate}                        \r\n                                onChange={this.handleChangeEffPriceDate}  />\r\n                    <CFormText>Fill your Effective Date for Item Price in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Purchase Price</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Purchase Price\" value={this.state.purchasePrice}                        \r\n                                onChange={this.handleChangePurchasePrice}  />\r\n                    <CFormText>Purchase Price only fill if item not </CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n\r\n               \r\n            \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}