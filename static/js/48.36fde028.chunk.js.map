{"version":3,"sources":["Auth/actions.js","views/master/employee/_form.js"],"names":["BASE_URL","_form","props","handleRecordStatus","event","setState","recordStatus","target","value","handleChangeEmployeeName","employeeName","handleChangePassword","password","handleBranchCode","branchCode","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getDate","today","Date","date","getFullYear","toString","substr","getMonth","state","data","errorMsg","isSave","submitHandler","bind","e","preventDefault","emp_code","this","Math","floor","random","axios","method","proxyHeaders","credentials","headers","getToken","emp_name","branch_code","then","response","reset","catch","error","mounted","URL","fetch","Headers","json","results","dropdownBranch","map","i","BRANCH_CODE","BRANCH_NAME","xs","md","action","encType","className","row","htmlFor","custom","name","id","onChange","placeholder","type","size","color","onClick","Component"],"mappings":"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","file":"static/js/48.36fde028.chunk.js","sourcesContent":["\r\n    // DEVELOPMENT\r\n    // export const BASE_URL = \"http://localhost:3000/api\";    \r\n    // // PRODUCTION\r\n    export const BASE_URL =\"http://52.221.199.238:3000/api\";\r\n   \r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nimport axios from 'axios';\r\nimport {getToken} from '../../../Auth/common'\r\nimport {BASE_URL} from '../../../Auth/actions'\r\n\r\n\r\nclass _form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        recordStatus: \"\",\r\n        employeeName: \"\",\r\n        password: \"\",\r\n        branchCode: \"\",\r\n        data:[],\r\n        date: \"\",\r\n        errorMsg: false,\r\n        isSave : false\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleRecordStatus = this.handleRecordStatus.bind(this);\r\n    this.handleChangeEmployeeName = this.handleChangeEmployeeName.bind(this);\r\n    this.handleChangePassword = this.handleChangePassword.bind(this);    \r\n    this.handleBranchCode = this.handleBranchCode.bind(this);    \r\n\r\n  }\r\n\r\n  handleRecordStatus = event => {\r\n    this.setState({\r\n        recordStatus: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangeEmployeeName = event => {\r\n    this.setState({\r\n        employeeName: event.target.value\r\n    });\r\n  }\r\n\r\n  handleChangePassword = event => {\r\n    this.setState({\r\n        password: event.target.value\r\n    });\r\n  }\r\n\r\n  handleBranchCode = event => {\r\n    this.setState({\r\n        branchCode: event.target.value\r\n    });\r\n  }\r\n\r\n  serialize = obj => {\r\n    let str = [];\r\n    for (let p in obj)\r\n      if (obj.hasOwnProperty(p)) {\r\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n      }\r\n    return str.join(\"&\");\r\n  };\r\n\r\n\r\n  getDate = () => {\r\n    var today = new Date(),\r\n \r\n    date = today.getFullYear().toString().substr(-2)+''+(today.getMonth() + 1);\r\n \r\n    this.setState({ date });\r\n  };\r\n\r\n  submitHandler(e) { \r\n    // let token = this.getToken()            \r\n    e.preventDefault();      \r\n   \r\n    let emp_code = this.state.date+'-'+Math.floor(Math.random() * 999) + 1;\r\n    \r\n\r\n    axios(`${BASE_URL}/employee/create`, {\r\n        method: \"POST\",\r\n        proxyHeaders: false,\r\n        credentials: true,        \r\n        headers: {              \r\n                  \"x-access-token\":getToken(),\r\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                  \"Accept\": \"application/json\"                  \r\n        },\r\n        data: this.serialize({    \r\n            recordStatus: this.state.recordStatus,\r\n            emp_name: this.state.employeeName,\r\n            emp_code: emp_code,\r\n            branch_code: this.state.branchCode,\r\n            password: this.state.password                      \r\n        })\r\n    }).then(response => {\r\n        // console.log(response)\r\n        this.setState({isSave:true})\r\n        this.reset()\r\n                 \r\n    }).catch(error => {                         \r\n        this.setState({\r\n            errorMsg:true\r\n        })\r\n    });\r\n                \r\n                \r\n}\r\n\r\nreset(){\r\n    this.setState({          \r\n        recordStatus: \"\",\r\n        employeeName: \"\",\r\n        branchCode: \"\",\r\n        password: \"\"   \r\n    });\r\n}\r\n\r\n\r\ncomponentDidMount() {           \r\n    this.mounted = true; \r\n    this.getDate();\r\n    const URL = `${BASE_URL}/branch/list`; \r\n    fetch(URL, { \r\n        method: 'post', \r\n        headers: new Headers({\r\n          \"x-access-token\":getToken(),\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          \"Accept\": \"application/json\"    \r\n        })       \r\n    })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n        this.setState({ data: json.results });             \r\n    });          \r\n    \r\n}\r\ncomponentWillUnmount() {\r\n    this.mounted = false;\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n  \r\n    let dropdownBranch = this.state.data.map((data, i) =>{\r\n        return  <option key={i} value={data.BRANCH_CODE}>{data.BRANCH_NAME}</option>;\r\n    })\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n        <CCol xs=\"12\" md=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Add Employee\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Record Status</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleRecordStatus}>\r\n                      <option value=\"\">- Choose -</option>\r\n                      <option value=\"A\">Enable</option>\r\n                      <option value=\"N\">Disable</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">Branch Code</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"select\" \r\n                             id=\"select\" \r\n                             onChange={this.handleBranchCode}>\r\n                        <option value=\"\">- Choose -</option>\r\n                      {dropdownBranch}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Employee Name</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Employee  Name\" value={this.state.employeeName}                        \r\n                                onChange={this.handleChangeEmployeeName}  />\r\n                    <CFormText>Fill your operator name in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">Password</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput id=\"text-input\" name=\"text-input\" type=\"password\" placeholder=\"Password\" value={this.state.password}                        \r\n                                onChange={this.handleChangePassword}  />\r\n                    <CFormText>Fill your password in here</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n            \r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"  onClick={this.submitHandler}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n            </CCardFooter>\r\n          </CCard>         \r\n        </CCol>        \r\n      </CRow>\r\n     \r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default _form\r\n"],"sourceRoot":""}